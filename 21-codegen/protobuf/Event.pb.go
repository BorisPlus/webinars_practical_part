// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Event.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event_Type int32

const (
	Event_UNKNOWN Event_Type = 0
	Event_MEETING Event_Type = 1
	Event_NOTIFY  Event_Type = 2
)

var Event_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "MEETING",
	2: "NOTIFY",
}

var Event_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"MEETING": 1,
	"NOTIFY":  2,
}

func (x Event_Type) String() string {
	return proto.EnumName(Event_Type_name, int32(x))
}

func (Event_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db346d8dee2808be, []int{0, 0}
}

type Event struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Start                *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	Type                 Event_Type           `protobuf:"varint,4,opt,name=type,proto3,enum=main.Event_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_db346d8dee2808be, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Event) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Event) GetType() Event_Type {
	if m != nil {
		return m.Type
	}
	return Event_UNKNOWN
}

func init() {
	proto.RegisterEnum("main.Event_Type", Event_Type_name, Event_Type_value)
	proto.RegisterType((*Event)(nil), "main.Event")
}

func init() { proto.RegisterFile("Event.proto", fileDescriptor_db346d8dee2808be) }

var fileDescriptor_db346d8dee2808be = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x76, 0x2d, 0x4b, 0xcd,
	0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x93, 0x92, 0x4f,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x25, 0x95, 0xa6, 0xe9, 0x97, 0x64, 0xe6, 0xa6,
	0x16, 0x97, 0x24, 0xe6, 0x16, 0x40, 0x94, 0x29, 0x9d, 0x67, 0xe4, 0x62, 0x05, 0x6b, 0x13, 0x12,
	0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85,
	0x0c, 0xb8, 0x58, 0x8b, 0x4b, 0x12, 0x8b, 0x4a, 0x24, 0x98, 0x14, 0x18, 0x35, 0xb8, 0x8d, 0xa4,
	0xf4, 0x20, 0xc6, 0xe9, 0xc1, 0x8c, 0xd3, 0x0b, 0x81, 0x19, 0x17, 0x04, 0x51, 0x28, 0xa4, 0xc3,
	0xc5, 0x9c, 0x9a, 0x97, 0x22, 0xc1, 0x4c, 0x50, 0x3d, 0x48, 0x99, 0x90, 0x0a, 0x17, 0x4b, 0x49,
	0x65, 0x41, 0xaa, 0x04, 0x8b, 0x02, 0xa3, 0x06, 0x9f, 0x91, 0x80, 0x1e, 0xc8, 0xcd, 0x7a, 0x10,
	0x5f, 0x84, 0x54, 0x16, 0xa4, 0x06, 0x81, 0x65, 0x95, 0x74, 0xb8, 0x58, 0x40, 0x3c, 0x21, 0x6e,
	0x2e, 0xf6, 0x50, 0x3f, 0x6f, 0x3f, 0xff, 0x70, 0x3f, 0x01, 0x06, 0x10, 0xc7, 0xd7, 0xd5, 0x35,
	0xc4, 0xd3, 0xcf, 0x5d, 0x80, 0x51, 0x88, 0x8b, 0x8b, 0xcd, 0xcf, 0x3f, 0xc4, 0xd3, 0x2d, 0x52,
	0x80, 0x29, 0x89, 0x0d, 0x6c, 0x99, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x83, 0xd2, 0x88,
	0x0e, 0x01, 0x00, 0x00,
}
